# Реализуй функцию convert_values, которая принимает на вход строка вид:
# "1 -5.6 True abc 0 23.56 hello"

# Функция должна возвращать новый список, в котором строки с целыми числами будут представлены как целые числа
# (тип int), строки с вещественными числами, как вещественные (тип float), а остальные данные - без изменений.

# Пример:
#  convert_values("1 -5.6 True abc 0 23.56 hello") => [1, -5.6, 'True', 'abc', 0, 23.56, 'hello']

...


# 2

# Объяви в программе класс Triangle, объекты которого создаются командой:
# tr = Triangle(a, b, c)
# где a, b, c - длины сторон треугольника (любые положительные числа). В каждом объекте класса Triangle должны
# формироваться локальные атрибуты _a, _b, _c с соответствующими значениями.
#
# Если в качестве хотя бы одной величины a, b, c передается не числовое значение, или меньше либо равно нулю,
# то должно генерироваться исключение TypeError с сообщением 'стороны треугольника должны быть положительными числами'

# Если из переданных значений a, b, c нельзя составить треугольник (условие: каждая сторона должна быть меньше суммы
# двух других), то генерировать исключение ValueError с сообщением 'из указанных длин сторон нельзя составить
# треугольник'.

