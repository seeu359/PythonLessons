import time

# Практика 1
# Реализуй функцию get_tshirts(), которая принимает 2 аргумента - первый аргумент это список, состоящий из цветов футболок,
# второй аргумент, тоже список, содержащий в себе доступные размеры футболок. Твоя задача вывести на экран все
# возможные комбинации цветов и размеров. Пример:
# get_tshirts(['black', 'red'], ['S', 'M', 'L']) => [('black', 'S'), ('black', 'M'), ('black', 'L'), ('red', 'S'), ...]
import time

...

# Практика 2
# Реализуй функцию, которая принимает в себя строку из названий городов, разделенных запятой.
# Необходимо сформировать список с помощью list comprehension, содержащий названия длиной более пяти символов.

...

# Практика 3

# Реализуй функцию get_abs_float(), которая принимает строку из вещественных чисел.
# Необходимо на их основе сформировать список lst с помощью list
# comprehension (генератора списков) из модулей введенных чисел (в списке должны храниться именно числа, а не строки).
# Пример:
# get_abs_float('5.56 -8.7 1.0 3.14 77.845') => [5.56, 8.7, 1.0, 3.14, 77.845]
# Подсказка - генераторы списков - это обычные выражения, по этому их можно вкладывать один в другой. При решении этой
# задачи тебе это понадобится.

...

# Практика 4

# Реализуй функцию get_correct_numbers(), которая принимает на вход список номеров телефонов формата +КОД(903)1112232
# C помощью генераторов списка отсортируй корректные номера телефона в соответствие со схемой выше.


def decorator(func):

    def wrapper(*args, **kwargs):
        print('..')
        a = func(*args, **kwargs)