# №1 Реализуй функцию get_odd_chars(), которая принимает на вход строку и
# возвращает новую строку. в которой содержаться только нечетные символы их
# исходной строки

...


# №2 Реализуй функцию, которая принимает на вход 2 строки. Твоя задача
# обрезать слово большего размера до размера слова, которое меньше.

...

# №3 Дополни предыдущий алгоритм таким образом, чтобы в конце производилось
# сравнение слов. Если слова одинаковые, то возвратить True, в противном случае
# False. Для сравнения слов используй функцию is_equal_words из модуля
# ./utils/lesson_9

...


# №4 Задача на строковые методы. Реализуй функцию get_amount_words(), которая
# принимает на вход строку и возвращает количество слов в этой строке. Для
# решения нужно воспользоваться специальным строковым методом, который
# разделяет по указанному разделителю.

...


# №4 Задача на строковые методы. Реализуй функцию replace_space_to_semicolon,
# которая принимает на вход
# строку из названий городов, разделенных пробелом. Необходимо преобразовать
# эту строку, чтобы названия городов шли через точку с запятой. Тебе также
# нужно будет использовать специальные строковые методы.

# Пример
# replace_space_to_semicolon('Москва Орел Казань') => 'Москва;Орел;Казань'


...


# №5 Реализуй функцию compare_version(), которая сравнивает переданные версии
# version1 и version2. Если version1 > version2, то функция должна вернуть 1,
# если version1 < version2, то -1, если же version1 = version2 — 0.
#
# Версия — это строка, в которой два числа (мажорная и минорные версии)
# разделены точкой, например: 12.11. Важно понимать, что версия — это не число
# с плавающей точкой, а несколько чисел не связанных между собой. Проверка на
# больше/меньше производится сравнением каждого числа независимо.
# Поэтому версия 0.12 больше версии 0.2.


# №6 Реализуй функцию is_perfect(), которая принимает число и возвращает True,
# если оно совершенное, и False — в ином случае.
#
# Совершенное число — положительное целое число, равное сумме его положительных
# делителей (не считая само число). Например, 6 — совершенное число,
# потому что 6 = 1 + 2 + 3.

...


# №7 Объяви функцию с именем check_password, которая принимает аргумент -
# строку (пароль) и имеет один именованный параметр chars с начальным значением
# в виде строки "$%!?@#". Функция должна проверять:
# 1) есть ли в пароле хотя бы один символ из chars
# 2) длина пароля не менее 8 символов.
# 3) Также в пароле должно присутствовать как минимум 5 буквенных символов.
# Если все проверки проходят, то функция возвращает True, иначе - False.

...


# №8 Реализуй функцию get_amount_subscribers(). Функция может принимать n
# количество аргументов. Их количество неизвестно - может быть 2, а может быть
# 10.
# На основе введенных данных необходимо сформировать список из целых чисел.
# Затем, вывести на экран максимальное, минимальное и суммарное значения
# этого списка через пробел.
