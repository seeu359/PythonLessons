# №1 Объяви функцию с именем get_even, которая принимает произвольное
# количество чисел в качестве аргументов и возвращает список из индексов
# только четных чисел массива позиционных аргументов. Постарайся вспомнить
# удобную функцию генератор для решения это задачи.

...

# №2 Реализуй функцию get_biggest_city, которой можно передавать произвольное
# количество названий городов через аргументы.
# Данная функция должна возвращать название города наибольшей длины.
# Если таких городов несколько, то первый найденный (из наибольших)


...


# №3 Реализуй функцию get_sort_keys(), которая на вход принимает словарь.
# Тебе необходимо отсортировать ключи словаря таким образом: ключи, у которых
# значение - числовой тип данных, сложить в список. Помимо этого, все
# числовые значения ключей надо сложить. Функция должна возвращать кортеж,
# в котором первым элементом будет список с ключами, а вторым - сумма сложенных
# значений. Не числовые ключи и их значения игнорировать

...


# №4 Почти всегда данные, которые поступают в нашу программу с какого-то сайта
# передаются в JSON формате - это практически тот же самый словарь. Реализуй
# функцию get_user_request(), которая принимает словарь с данным запроса,
# а вторым именованным аргументом принимает список допустимых HTTP-методов в
# виде списка. Тебе нужно проверить, есть ли в нашем словаре ключ method. Если
# он есть, проверить, соответствует ли значение ключа method списку разрешенных
# методов.
#

...

# №5 В этой практике мы реализуем две функции:

# Функцию make_user(), которая должна принимать два параметра —
# имя пользователя и возраст.
# Функция должна вернуть словарь с ключами 'name' и 'age', по которым должны
# быть сохранены соответствующие значения.
# Функцию format_user(), которая принимает словарь — результат вызова функции
# make_user(), и должна вернуть строку вида 'Phil, 25'.
