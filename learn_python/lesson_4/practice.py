# №1 Представь, что ты хочешь купить квартиру, которая удовлетворяет таким
# условиям: площадь от 100 квадратных метров и больше на любой улице ИЛИ
# площадь от 80 квадратных метров и больше, но на центральной улице Main
# Street. Напиши функцию is_good_apartment(), которая принимает 2 аргумента:
# площадь квартиры и название улицы. Функция должна возвращать булевый
# тип данных


...


# №2 Реализуй функцию string_or_not(), которая проверяет является ли
# переданный параметр строкой. Если да, то возвращается строка yes, иначе no

...


# №3 Реализуй функцию normalize_url(), которая выполняет так называемую
# нормализацию данных. Она принимает адрес сайта и возвращает его
# с https:// в начале.
#
# Функция принимает адреса в виде:
#
# АДРЕС
# http://АДРЕС
# https://АДРЕС (уже нормализованный)
# и всегда возвращает адрес в виде https://АДРЕС.

# normalize_url('https://ya.ru')  # https://ya.ru
# normalize_url('google.com')  # https://google.com
# normalize_url('http://ai.fi')  # https://ai.fi


...


# №4 Модифицируй функцию print_numbers() так, чтобы она выводила числа в обратном
# порядке. Для этого нужно идти от верхней границы к нижней. То есть счётчик
# должен быть инициализирован максимальным значением, а в теле цикла его нужно
# уменьшать. По окончании работы функция должна вывести строку finished!.


...


# №5 Реализуем функцию sum_numbers_from_range,
# которая складывает числа в указанном диапазоне, и возвращает результат.

# sum_numbers_from_range(5, 7)  # 5 + 6 + 7 = 18
# sum_numbers_from_range(1, 2)  # 1 + 2 = 3
# sum_numbers_from_range(1, 1)      # 1
# sum_numbers_from_range(100, 100)  # 100

...

# №6 Реализуй функцию join_numbers_from_range(), которая объединяет все
# числа из диапазона в строку и возвращает получившуюся строку:

# join_numbers_from_range(1, 1)  # '1'
# join_numbers_from_range(2, 3)  # '23'
# join_numbers_from_range(5, 10)  # '5678910'

...
